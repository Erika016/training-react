{"ast":null,"code":"var _jsxFileName = \"/var/www/Code/training-react/evento-hooks/src/components/Evento.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 3 botones en pantalla\n// onclick  \n// hola mostrar alerta hola\n// onclick\n// adios console.log diga vete de aqui\n// pregunta (use state) cambiar texto y que ponga Esto lo tengo Dominado\n// BUTTONonclick={()=>{\n// alert(\"hola\");\n// }}\nexport function Evento(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          alert(\"Hola\");\n        },\n        children: \"HOLA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(\"Adios\");\n        },\n        children: \"ADIOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"const [pregunta, setpregunta]= useState\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = Evento;\n\nvar _c;\n\n$RefreshReg$(_c, \"Evento\");","map":{"version":3,"sources":["/var/www/Code/training-react/evento-hooks/src/components/Evento.js"],"names":["Evento","props","alert","console","log"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,OAAO,SAASA,MAAT,CAAgBC,KAAhB,EAAsB;AACzB,sBACA;AAAA,4BACI;AAAA,6BACA;AAAQ,QAAA,OAAO,EAAE,MAAI;AACrBC,UAAAA,KAAK,CAAC,MAAD,CAAL;AACH,SAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA,6BACA;AAAQ,QAAA,OAAO,EAAE,MAAI;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,SAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAYI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAqBH;KAtBeJ,M","sourcesContent":["// 3 botones en pantalla\n// onclick  \n// hola mostrar alerta hola\n// onclick\n// adios console.log diga vete de aqui\n// pregunta (use state) cambiar texto y que ponga Esto lo tengo Dominado\n\n// BUTTONonclick={()=>{\n// alert(\"hola\");\n// }}\nexport function Evento(props){\n    return(\n    <div>\n        <div>\n        <button onClick={()=>{\n        alert(\"Hola\")\n    }}>HOLA</button>\n        </div>\n\n        <div>\n        <button onClick={()=>{\n        console.log(\"Adios\");\n    }}>ADIOS</button>\n        </div>\n        <div>\n            <button>\n                const [pregunta, setpregunta]= useState\n            </button>\n        </div>\n\n    </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}